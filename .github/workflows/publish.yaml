name: Release new version
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '**.md'
  workflow_dispatch:

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/ci.yaml
    secrets: inherit

  check-dist:
    name: Check dist/
    uses: ./.github/workflows/check-dist.yaml
    secrets: inherit

  release:
    environment:
      name: github
    needs: [ci, check-dist]
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Semantic Version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Set Outputs
        shell: bash
        id: outputs
        run: |
          echo version=$(cat package.json | jq -r '.version') >> $GITHUB_OUTPUT
          echo tag=$(cat package.json | jq -r '.version') >> $GITHUB_OUTPUT
          echo release_notes=$(cat release_notes.md) >> $GITHUB_OUTPUT
      - name: Create tag
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a ${{ steps.outputs.outputs.tag }} -m "Release ${{ steps.outputs.outputs.version }}"
          git push origin ${{ steps.outputs.outputs.tag }}
      - name: Create Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.outputs.outputs.tag }}
          body_path: ${{ steps.outputs.release-notes.path }}
          generate_release_notes: true
          prerelease: false
      - name: Publish N${{ steps.outputs.outputs.tag }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


